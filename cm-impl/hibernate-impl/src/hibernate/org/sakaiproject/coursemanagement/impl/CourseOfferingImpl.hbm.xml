<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
   "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping default-cascade="none" package="org.sakaiproject.coursemanagement.impl">
	<subclass name="org.sakaiproject.coursemanagement.impl.CourseOfferingImpl"
			extends="org.sakaiproject.coursemanagement.impl.AbstractMembershipContainer">

		<many-to-one name="crossListing" column="CROSS_LISTING" class="org.sakaiproject.coursemanagement.impl.CrossListing" />
        <property name="startDate" column="START_DATE" type="timestamp" not-null="false" />
        <property name="endDate" column="END_DATE" type="timestamp" not-null="false" />

		<many-to-one name="canonicalCourse" column="CANONICAL_COURSE" index="CM_CO_CANON_COURSE_IDX" class="org.sakaiproject.coursemanagement.impl.CanonicalCourseImpl" />
		<many-to-one name="academicSession" column="ACADEMIC_SESSION" index="CM_CO_ACADEMIC_SESS_IDX" class="org.sakaiproject.coursemanagement.impl.AcademicSessionImpl" />

		<set name="courseSets" table="CM_COURSE_SET_OFFERING_ASSOC_T" inverse="true">
			<key column="COURSE_OFFERING" />
			<many-to-many class="org.sakaiproject.coursemanagement.impl.CourseSetImpl" column="COURSE_SET" />
		</set>

	</subclass>

    <query name="findCourseOfferingByEid">
        <![CDATA[
        from CourseOfferingImpl as co where co.eid=:eid
        ]]>
    </query>

    <query name="findCourseOfferingsByCourseSetAndAcademicSession">
        <![CDATA[
        select co from CourseOfferingImpl as co, CourseSetImpl as cs where
        	cs.eid=:courseSetEid and
        	co.academicSession.eid = :academicSessionEid and
        	cs in elements(co.courseSets)
        ]]>
    </query>

	<query name="findCurrentlyInstructingCourseOfferings">
        <![CDATA[
        select co from CourseOfferingImpl as co, EnrollmentSetImpl as enrollmentSet
        	where :userId in elements(enrollmentSet.officialInstructors) and
        	co = enrollmentSet.courseOffering and
        	(enrollmentSet.courseOffering.startDate is null or enrollmentSet.courseOffering.startDate <= sysdate) and
        	(enrollmentSet.courseOffering.endDate is null or enrollmentSet.courseOffering.endDate >= sysdate)
        ]]>
    </query>

	<query name="findAllInstructingCourseOfferings">
        <![CDATA[
        select co from CourseOfferingImpl as co, EnrollmentSetImpl as enrollmentSet
        	where :userId in elements(enrollmentSet.officialInstructors) and
        	co = enrollmentSet.courseOffering
        ]]>
    </query>
    
	<query name="findInstructingCourseOfferingsByAcademicSession">
        <![CDATA[
        select co from CourseOfferingImpl as co, EnrollmentSetImpl as enrollmentSet
        	where :userId in elements(enrollmentSet.officialInstructors) and
        	co = enrollmentSet.courseOffering and co.academicSession.eid = :academicSessionEid
        ]]>
    </query>


</hibernate-mapping>