<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
   "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">
<hibernate-mapping default-cascade="none" package="org.sakaiproject.coursemanagement.impl">
	<subclass name="org.sakaiproject.coursemanagement.impl.CourseSetImpl"
			extends="org.sakaiproject.coursemanagement.impl.AbstractMembershipContainer">
			
		<many-to-one name="parent" column="PARENT_COURSE_SET" index="CM_COURSE_SET_PARENT_IDX" class="org.sakaiproject.coursemanagement.impl.CourseSetImpl" />
	
		<!-- 
		The many-to-many relationship between CourseSets and CourseOfferings/CanonicalCourses
		are managed on the CourseSetImpl.  If you modify the set of CourseSets on a
		CourseOffering/CanonicalCourse, it will not be persisted.
		-->
		<set name="canonicalCourses" table="CM_COURSE_SET_CANON_ASSOC_T" inverse="false" cascade="save-update">
			<key column="COURSE_SET" />
			<many-to-many class="org.sakaiproject.coursemanagement.impl.CanonicalCourseImpl" column="CANON_COURSE" />
		</set>

		<set name="courseOfferings" table="CM_COURSE_SET_OFFERING_ASSOC_T" inverse="false" cascade="save-update">
			<key column="COURSE_SET" />
			<many-to-many class="org.sakaiproject.coursemanagement.impl.CourseOfferingImpl" column="COURSE_OFFERING" />
		</set>
		
	</subclass>

    <query name="findCourseSetByEid">
        <![CDATA[
        from CourseSetImpl as courseSet where courseSet.eid=:eid
        ]]>
    </query>

    <query name="findTopLevelCourseSets">
        <![CDATA[
        from CourseSetImpl as courseSet where courseSet.parent is null
        ]]>
    </query>

    <query name="findChildCourseSets">
        <![CDATA[
        from CourseSetImpl as courseSet where courseSet.parent.eid=:parentEid
        ]]>
    </query>

    <query name="findNonEmptyCourseSet">
        <![CDATA[
        from CourseSetImpl as cs where cs.eid=:eid and
        	(size(cs.canonicalCourses) > 0 or size(cs.courseOfferings) > 0)
        ]]>
    </query>

</hibernate-mapping>