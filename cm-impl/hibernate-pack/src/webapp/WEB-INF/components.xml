<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<bean id="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl.coursemanagement"
		class="org.sakaiproject.springframework.orm.hibernate.impl.AdditionalHibernateMappingsImpl">
		<property name="mappingResources">
			<list>
                <value>org/sakaiproject/coursemanagement/impl/AcademicSessionCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/MembershipContainerCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/CanonicalCourseCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/CourseOfferingCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/CourseSetCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/CrossListingCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/EnrollmentCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/EnrollmentSetCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/MembershipCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/SectionCmImpl.hbm.xml</value>
                <value>org/sakaiproject/coursemanagement/impl/MeetingCmImpl.hbm.xml</value>
			</list>
		</property>
	</bean>

	<bean id="org.sakaiproject.coursemanagement.api.CourseManagementService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		</property>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
        <property name="target">
            <bean class="org.sakaiproject.coursemanagement.impl.CourseManagementServiceFederatedImpl">
            	<property name="implList">
            		<!-- List the implementations here, in descending order of authority -->
            		<list>
			            <!-- 
			            	For testing, we use an impl that returns no data.
			            	Replace this sample chained impl with your custom impl, if any.
			            -->
			            <bean class="org.sakaiproject.coursemanagement.impl.CourseManagementServiceSampleChainImpl"/>

            			<!-- The internal, hibernate-backed implementation -->
            			<ref bean="org.sakaiproject.coursemanagement.impl.CourseManagementServiceHibernateImpl"/>
					</list>
            	</property>
            </bean>
        </property>
	</bean>

	<!-- Do not reference this bean ID.  It is for internal CM use only. -->
	<!-- TODO: Hide this bean inside another, if possible, to make it private -->
	<bean id="org.sakaiproject.coursemanagement.impl.CourseManagementServiceHibernateImpl" class="org.sakaiproject.coursemanagement.impl.CourseManagementServiceHibernateImpl">
		<property name="sessionFactory">
			<ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
		</property>
	</bean>


	<!--
		This is a complex bean that's hard to read, so here's the "wrapper hierarchy":

		Transaction Proxy
			Authz Proxy
				CM Admin Hibernate Impl

		Note that is service operates only on the CM data managed by hibernate.  Any
		other data that is federated with the hibernate data (see the
		org.sakaiproject.coursemanagement.api.CourseManagementService bean for
		details on federation) is not available for manipulation by the CM Admin service.
	-->
	<bean id="org.sakaiproject.coursemanagement.api.CourseManagementAdministration"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalTransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
		<property name="target">
			<bean class="org.springframework.aop.framework.ProxyFactoryBean">
				<property name="proxyInterfaces">
					<value>org.sakaiproject.coursemanagement.api.CourseManagementAdministration</value>
				</property>
				<property name="interceptorNames">
					<list><value>cmAdminAuthzAdvisor</value></list>
				</property>
				<property name="target">
					<bean class="org.sakaiproject.coursemanagement.impl.CourseManagementAdministrationHibernateImpl"
						init-method="init" destroy-method="destroy">
						<property name="sessionFactory">
							<ref bean="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory" />
						</property>
						<!-- Use the internal hibernate service only, not the federated service -->
						<property name="cmService">
							<ref bean="org.sakaiproject.coursemanagement.impl.CourseManagementServiceHibernateImpl" />
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- AOP Advisor performs Authz checks for the CM Admin service -->
	<bean id="cmAdminAuthzAdvisor" 
	    class="org.springframework.aop.support.DefaultPointcutAdvisor">
	    <property name="advice">
	    	<bean class="org.sakaiproject.coursemanagement.impl.aop.CourseManagementAdministrationAuthzAdvisor">
				<property name="securityService">
					<ref bean="org.sakaiproject.authz.api.SecurityService" />
				</property>
	    	</bean>
	    </property>
	</bean>
   

	<!-- CourseManagement Group Provider -->
	<!--
	<bean id="org.sakaiproject.authz.api.GroupProvider"
			class="org.sakaiproject.coursemanagement.impl.provider.CourseManagementGroupProvider"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
			<property name="cmService">
				<ref bean="org.sakaiproject.coursemanagement.api.CourseManagementService"/>
			</property>
			<property name="roleMap">
				<map>
					<entry key="DA" value="Instructor" />
					<entry key="I" value="Instructor" />
					<entry key="S" value="Student" />
					<entry key="CE" value="Student" />					
				</map>
			</property>
			<property name="officialInstructorRole" value="Instructor" />
			<property name="enrollmentRole" value="Student" />
			<property name="defaultSakaiRole" value="Student" />
			<property name="roleResolvers">
				<list>
					<bean class="org.sakaiproject.coursemanagement.impl.provider.SectionRoleResolver"/>
					<bean class="org.sakaiproject.coursemanagement.impl.provider.CourseOfferingRoleResolver"/>
					<bean class="org.sakaiproject.coursemanagement.impl.provider.CourseSetRoleResolver"/>
				</list>
			</property>
	</bean>
 	-->
 </beans>

