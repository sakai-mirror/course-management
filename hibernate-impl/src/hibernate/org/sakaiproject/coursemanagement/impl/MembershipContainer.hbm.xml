<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
   "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">
<hibernate-mapping default-cascade="none" package="org.sakaiproject.coursemanagement.impl">

	<class name="org.sakaiproject.coursemanagement.impl.MembershipContainerImpl" table="CM_MEMBER_CONTAINER_T">

		<id name="key" column="MEMBER_CONTAINER_ID" type="long">
			<generator class="native">
				<param name="sequence">CM_MEMBER_CONTAINER_S</param>
			</generator>
		</id>
		<version name="version" type="integer" column="VERSION" />

		<property name="lastModifiedBy" column="LAST_MODIFIED_BY" />
		<property name="lastModifiedDate" type="timestamp" column="LAST_MODIFIED_DATE" />
		<property name="createdBy" column="CREATED_BY" />
		<property name="createdDate" type="timestamp" column="CREATED_DATE" />

		<property name="eid" column="ENTERPRISE_ID" type="string" unique="true" not-null="true" />
		<property name="title" column="TITLE" type="string" not-null="true" />
		<property name="description" column="DESCRIPTION" type="string" not-null="true" />
		
		<joined-subclass
			name="org.sakaiproject.coursemanagement.impl.CourseSetImpl"
			extends="org.sakaiproject.coursemanagement.impl.MembershipContainerImpl"
			>
			<key column="MEMBER_CONTAINER_ID" />
			
			<many-to-one name="parent" column="PARENT_COURSE_SET" index="CM_COURSE_SET_PARENT_IDX" class="org.sakaiproject.coursemanagement.impl.CourseSetImpl" />
	
			<!-- 
			The many-to-many relationship between CourseSets and CourseOfferings/CanonicalCourses
			are managed on the CourseSetImpl.  If you modify the set of CourseSets on a
			CourseOffering/CanonicalCourse, it will not be persisted.
			-->
			<set name="canonicalCourses" table="CM_COURSE_SET_CANON_ASSOC_T" inverse="false">
				<key column="COURSE_SET" />
				<many-to-many class="org.sakaiproject.coursemanagement.impl.CanonicalCourseImpl" column="CANON_COURSE" />
			</set>

			<set name="courseOfferings" table="CM_COURSE_SET_OFFERING_ASSOC_T" inverse="false">
				<key column="COURSE_SET" />
				<many-to-many class="org.sakaiproject.coursemanagement.impl.CourseOfferingImpl" column="COURSE_OFFERING" />
			</set>
		</joined-subclass>

		<joined-subclass
			name="org.sakaiproject.coursemanagement.impl.CrossListable"
			extends="org.sakaiproject.coursemanagement.impl.MembershipContainerImpl"
			table="CM_CROSS_LISTABLE_T"
			>
			<key column="MEMBER_CONTAINER_ID" />
			
			<many-to-one name="crossListing" column="CROSS_LISTING" class="org.sakaiproject.coursemanagement.impl.CrossListing" />
			
			<joined-subclass
				name="org.sakaiproject.coursemanagement.impl.CanonicalCourseImpl"
				extends="org.sakaiproject.coursemanagement.impl.CrossListable"
				table="CM_CANON_COURSE_T"
				>
					<key column="MEMBER_CONTAINER_ID" />
					<set name="courseSets" table="CM_COURSE_SET_CANON_ASSOC_T" inverse="true">
						<key column="CANON_COURSE" />
						<many-to-many class="org.sakaiproject.coursemanagement.impl.CourseSetImpl" column="COURSE_SET" />
					</set>
			</joined-subclass>
	
			<joined-subclass
				name="org.sakaiproject.coursemanagement.impl.CourseOfferingImpl"
				extends="org.sakaiproject.coursemanagement.impl.CrossListable"
				table="CM_COURSE_OFFERING_T">
					<key column="MEMBER_CONTAINER_ID" />
			        <property name="startDate" column="START_DATE" type="timestamp" not-null="false" />
			        <property name="endDate" column="END_DATE" type="timestamp" not-null="false" />
					<many-to-one name="canonicalCourse" column="CANONICAL_COURSE" index="CM_CO_CANON_COURSE_IDX" class="org.sakaiproject.coursemanagement.impl.CanonicalCourseImpl" />
					<many-to-one name="academicSession" column="ACADEMIC_SESSION" index="CM_CO_ACADEMIC_SESS_IDX" class="org.sakaiproject.coursemanagement.impl.AcademicSessionImpl" />
					<set name="courseSets" table="CM_COURSE_SET_OFFERING_ASSOC_T" inverse="true">
						<key column="COURSE_OFFERING" />
						<many-to-many class="org.sakaiproject.coursemanagement.impl.CourseSetImpl" column="COURSE_SET" />
					</set>
			</joined-subclass>
		</joined-subclass>

		<joined-subclass
			name="org.sakaiproject.coursemanagement.impl.SectionImpl"
			extends="org.sakaiproject.coursemanagement.impl.MembershipContainerImpl"
			table="CM_SECTION_T">
				<key column="MEMBER_CONTAINER_ID" />
				<property name="category" column="CATEGORY" type="string" />
				<many-to-one name="courseOffering" column="COURSE_OFFERING" index="CM_SECTION_COURSE_IDX" class="org.sakaiproject.coursemanagement.impl.CourseOfferingImpl" />
				<many-to-one name="enrollmentSet" column="ENROLLMENT_SET" index="CM_SECTION_ENR_SET_IDX" class="org.sakaiproject.coursemanagement.impl.EnrollmentSetImpl" />
				<many-to-one name="parent" column="PARENT_SECTION" index="CM_SECTION_PARENT_IDX" class="org.sakaiproject.coursemanagement.impl.SectionImpl" />
		</joined-subclass>

	</class>

    <query name="memberContainerExists">
        <![CDATA[
        select count(*) from MembershipContainerImpl as container where container.eid=:eid
        ]]>
    </query>

    <query name="findCourseSetByEid">
        <![CDATA[
        from CourseSetImpl as courseSet where courseSet.eid=:eid
        ]]>
    </query>

    <query name="findTopLevelCourseSets">
        <![CDATA[
        from CourseSetImpl as courseSet where courseSet.parent is null
        ]]>
    </query>

    <query name="findChildCourseSets">
        <![CDATA[
        from CourseSetImpl as courseSet where courseSet.parent.eid=:parentEid
        ]]>
    </query>
	
    <query name="findCanonicalCourseByEid">
        <![CDATA[
        from CanonicalCourseImpl as cc where cc.eid=:eid
        ]]>
    </query>

    <query name="findCourseOfferingByEid">
        <![CDATA[
        from CourseOfferingImpl as co where co.eid=:eid
        ]]>
    </query>

    <query name="findSectionByEid">
        <![CDATA[
        from SectionImpl as sec where sec.eid=:eid
        ]]>
    </query>

    <query name="findTopLevelSectionsInCourseOffering">
        <![CDATA[
        from SectionImpl as sec where sec.courseOffering=:courseOffering and sec.parent is null
        ]]>
    </query>

    <query name="findChildSections">
        <![CDATA[
        from SectionImpl as sec where sec.parent.eid=:parentEid
        ]]>
    </query>

</hibernate-mapping>
